What is DBMS?
    Eta holo collection of programs ja user der database k CRUD( Create, Update, Update, Delete) korte dey.
Amra dbms use kore thaki  
i) to reduce data redundancy(data redundancy hoy jokhn same piece of data multiple places e exist kore ).
ii) to reduce data inconsistency(data inconsistency hoy jokhn same data different format e multiple table e exist kore).
    kokhono kokhnon data redundancy r foleo data inconsistency hye thake.
iii) data k easily access korar jonno


Working of DBMS-
    suppose ekta table or database a6e jar modhye theke amra database crud korte chai6i ta amra MySQL, Oracle r modhye SQL(Structured Query Language), PL(procedural Language) use kore kaj kori.

Database holo collections of table jar modhye data thake sei entity(name of the table ex.Student) ta r sombodhe. Ei tables gulo eke oporer sathe related thake in the conceptual schema.
and er upor crud operation perform kora hoy along with inserting new data.


DataBase System-
    database + DBMS software system.


Advantages of using DBMS-
i) Redundancy komanor jnno
ii) unauthorized access k restrict korar jnno
iii) multiple users at a time database k access korte pare
iv)  Queries use kore data extraction easily kora jay


Checkpoint in DBMS-
    as the name suggest it is a point of time where the mechanism permanently stores all the previous 
    logs in the storage disk and removes them from the system.
Log based recovery system ei checkpoint use kora oy.
Suppose kono karon e database engine crash kore gelo thn ei checkpoint i kaje kaje lage as checkpoint obdhi stored logs
gulo k recover kora jay.
Generally system crash r time e checkpoint k us kora hoy jate 
transaction k abar prothom theke start na korte hoy.


Transparent DBMS-
    eta type of DBMS ja databse r physical structure k user r theke hide kore rakhe.(Ex. Google Spanner)


Unary operations->
    single operands use kore j operation gulo perform kora hoy.
    SELECTION, PROJECTION, RENAME.
SELECTION operations->=, <=, =>


RDBMS-
    Relational DBMS. RDBMS e DBMS r theke high level r data organization and data integrity provide kore.
    RDBMS e only SQL use kora hoy ja feature rich mane databse r manipulation kora easy hoy. But DBMS e amra various query languages emon ki APIs o use kora jay.
    DBMS r main golpo holo etar flexibility and simplicity more than enforcing rigid data schemas ja RDBMS e matter kore.
    RDBMS use kora hoy more well suited data structures r khetre where as DBMS can't provide same level of data consistency.


Database Languages->
    Data Definition Language(DDL)->
        CREATE, ALTER, DROP, TRUNCATE, RENAME

    Data Manipulation Language(DML)->
        SELECT, UPDATE, INSERT, DELETE

    Data Control Language(DCL)->
        GRANT, REVOKE

    Transaction Control Language(TCL)->
        COMMIT, ROLLBACK, SAVEPOINT


Data Model->
    data model, entities and attributes r modhye relation define kore.
    i) Hierarchial data model
    ii) network model
    iii) relational model
    iv) entity-relationship model


Relation schema holo blueprint of relations between set of attributes and various datas. Blueprint r modhye kono data thake na but bluprint follow kore j
table ta create kora hoy tate records thake.


Degree of relation or Cardinality->
    Degree of relation holo number of attributes in it's relational schema. Eke cardinality o bole.


Types of Cardinality ratio->
    i) one-to-one(1:1) (pphone e kotha bola)
    ii) one-to-many(1:m)/(m:1) (brodcasting services)
    iii) many-to-many(m:m) (suppose ekta table e 5 ta friends different type r food order korlo)


Disadvantages of file processing system->
    file processing system holo amra normal j file r modhye content save kore rakhi.
    ei process r disadvantages holo-
        Incosistent, Not secure, data redundancy, difficult in accessing data, data isolation, data integrity, limited data sharing


Data abstraction->
    user der theke irrelevant details k hide kore rakhe jate database r sathe user interaction smooth hoy.


Levels of Data Abstraction->(3-tier architecture)
    i) Physical Level(Internal Level)-
            lowest level of abstraction. data kon database e stored thake and sei database ta kon storage  stored thake.

    ii) Logical level(Conceptual level)-
            next higher level of abstraction. table gulo r nijeder modhye relation ei level e describe kora thake.

    iii) View Level(Extarnal level)-
            highest level of abstraction. eta die user table theke data access r jnno request kore.

Types of mapping->
    i) External mapping- External level k conceptual level r theke differ kore dey ja external level r request gulo k 
        conceptual level e transform kore dey without changing the datas in concptual level.
    ii)Internal mapping- exists between conceptual level and internal level.

Relational algebra->
    procedual query language die select, project, set difference, union, rename ei operation
    gulo perform korte hbe.

Relational calculas->
    it's different from any other algebra, differentiation, integration.
    i) Tuple relational calculas
    ii) Domain relational calculas


Durability in DBMS->
    when a transaction gets completed, tar effect ta jno stay kore even if the system crashes. Durability eta ensure kore j 
    transaction complete hoar pore tar result non-volatile memory te jate store hye jay foel even if th system crashes the result is still there.
  


Normalization->
    ekta process ja data redundancy k reduce kore while ensuring data integrity.
    Ar eta anomalies k atkay. Anomalies holo incosistency in data ja updation, insertion, deletion r fole hoye thake . meaning ekta database r attribute gulo integrity maintain kore
    thake mane the attributes maintains certain relations between them, also some them maintains their own intgrities. so amra jokhn sei attribute e data insert
    korbo amader kheyal ralhte hbe jate amra ei integrity gulo k maintain korte pari otherwise data inconsistency dekha debe.

    Types of integrities-
    i) Domain constraint- ekta attribute r modhye ki data store korte parbo ( like in ag attribute we can enter data between 1 to 120 only)
    ii) Entity Integrity Constraint- primary key te null value store kora jay na
    iii) Referential Integrity Constraint- restrictions on how foreign keys are used.
    iv) Key constraint- Not NULL, unique, Default, Check, Primary key, Foreign key

    Types of anomalies-
    i)Insertion anomalies- jokhn amra ekta nonexistent attribute r modhye record store korte Jai or suppose we are inserting record in a primary key attribute but we try to add one record as NULL.
    ii)Deletion anomalies- suppose amra ekta customer r record ta delete korte chai6i but tar fole sei customer related sob order o delete hye jbe.
    iii)Updation anomalies- like kono database e employees o tader salary store kora thakle jodi ekti employee r salary update kora holo but tar related onno attribute gulo update na korle data inconsistency dekha jabe.

    Ei anomalies gulo k remove korar jnno , data redundancy reduce korar jnno and data consistency maintain korar jnno amra normalization kore thaki.

    Types of normalization->
    i) 1NF- every attribute contains atomic values  meaning each attribute contains only one data
    ii) 2NF- No partial dependency meaning only functional dependent on primary key is available.
                suppose ekta table a6e with entity EmployeeProjectDetail and it contains two primary key attributes named employee code and project ID so as we can see we have partial dependencies in this table as it contains two primary keys. To fix it we have to make two different table containing one primary key as we all know  a fully dependent table depend on only one primary key.
    iii) 3NF- 2NF + No transition dependency. j record ta key r sathe related na sei record ta table e exist korbe na. sei record gulo k different table e store korte hbe.

    Employee Code	Employee Name	Employee Zipcode	Employee City
    101	            Jolly	        110033	            Model Town
    101	            Jolly	        110044	            Badarpur
    102	            Rehan	        110028	            Naraina
    103	            Snehi	        110064	            Hari Nagar

    ei table ta ke 2 to different table e convert korbo-

    Employee Code	Employee Name	Employee Zipcode
    101	            Jolly	        110033
    101	            Jolly	        110044
    102	            Rehan	        110028
    103	            Snehi	        110064


    Employee Zipcode	Employee City
    110033	            Model Town
    110044	            Badarpur
    110028	            Naraina
    110064	            Hari Nagar


    iv) BCNF( Boyce-Codd Normal Form)-
        X->Y.   if Y is a prime attribute then X can not be a non-prime attribute.

    v) 4NF- 
        If a relationship has no multivalued dependencies and is in Boyce Codd's normal form, it is said to be in 4NF. 
        The relationship is said to be a multivalued dependency if there are multiple values of B for a given value of A in a dependency A B. 


Denormalization->
    eta use kora hoy conplex and costly join k avoid korar jnno.
    redundant data k add kore complex datak avoid kora hoy. Mane amra kokhonoi chaibo na j
    amra redundant data nie kaj kori but amra taoo chai bo na j amra kokhonoi costly join nie kaj kori,
    emon ki amra denormalization perform kori after performing normalization. at first we reduce all the redundant data by 
    performing normalization and then we add the least amount of redundant data that can be added to avoid redundancy by performing denormalizationand ei vabe amra costly 
    join keo avoid korte parbo.


functional dependency->
    ekta attribute j relationship die onno attribute r value uniquely define korte help kore takei functional dependency bole.
    if A->B , B is functionally dependent on B.


E-R model(Entity-Relationship Model)->
    ete objects ja k amra entity bole thaki and sei ibject gulor relation nie toiri hoy E-R model.
    Ei model r primary object holo entity ja k amra rectangle die define kori. r tar various attribute ja k ellipses die define kori and ei entities gulo how related to attributes ta relationship set die bojhai ja k diamond die define kori ta6ara eisob shapes gulo data flow die connected thake.

 like customer is a strong entity which is defied by a singular rectangle. it borrows loan. borrows here is the relationship set which is deined by a diamond.
 loan here is the  weak entity set as it does not have it's own primary key and it's defined by a double rectangular shape.
 customer, the strong entity has some attributes like- C_ID, C_name, here C_ID is a primary key and that's why we can say that customer is a string entity.
 noe loan, the weak entity has some attributes like- L_name, L_date, this weak entity borrows a partial key which is connected to the strong entity of the primary key of the strong entity.
 Two strong entities are connected by a single diamond.
 a strong entity and a weak entity is connected by a double diamond.


Entity->
set of attributes in a database.
Charactarestics of the entity in real life are considered as attributes. 


Integrity->
    Entity integrity- Primary key cannot have a null value and every records in the primary key attribute should be unique.
    Referential integrity- foreign key te null value tahka jabe na and foreign key kono table r primary key hoa cholbe na.


Extension->
    at acertain time, table e total kota records or tuples a6e takei sei table tar extension bole , tai whenever we insert, update , delete the value of the extension changes.

Intension->
    data schema kei intension bole. mane amra desc marle jegulo dekhay sql e like names of the attributes, which integritites those attributes follows, which data types. in sort the description of a database is known as intension.